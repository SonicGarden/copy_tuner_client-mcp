#!/usr/bin/env ruby

require "mcp"
require "mcp/transports/stdio"
require_relative "../lib/copy_tuner_client/mcp"

require File.expand_path(File.join("config", "environment"))

project_id = CopyTunerClient.configuration.project_id || CopyTunerClient.configuration.api_key
translation_template = MCP::ResourceTemplate.new(
  uri_template: "copytuner://projects/#{project_id}/translations/{locale}/{key}",
  name: "rails.i18n.translation",
  description: "Individual Rails i18n translation for a specific key and locale",
  mime_type: "text/plain"
)

server = MCP::Server.new(
  name: "copy_tuner",
  tools: [
    CopyTunerClient::Mcp::Tool::SearchKey,
    CopyTunerClient::Mcp::Tool::SearchTranslations,
    CopyTunerClient::Mcp::Tool::CreateI18nKey,
    CopyTunerClient::Mcp::Tool::GetLocales,
    CopyTunerClient::Mcp::Tool::GetEditUrl
  ],
  resource_templates: [translation_template]
)

server.resources_read_handler do |params|
  uri = params[:uri]
  match = uri.match(%r{^copytuner://projects/#{project_id}/translations/([^/]+)/(.+)$})

  if match
    locale = match[1]
    key = match[2]
    key_with_locale = [locale, key].join(".")
    result = CopyTunerClient.cache.blurbs.fetch(key_with_locale, "")

    [{
      uri: params[:uri],
      mimeType: "text/plain",
      text: result
    }]
  else
    []
  end
end

transport = MCP::Transports::StdioTransport.new(server)
transport.open
